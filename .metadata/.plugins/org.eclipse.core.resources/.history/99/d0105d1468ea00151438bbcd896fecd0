<%@page import="java.util.regex.Matcher"%>
<%@page import="java.util.regex.Pattern"%>
<%@page import="java.util.Vector"%>
<%@page import="java.util.StringTokenizer"%>
<%@page import="org.apache.commons.logging.Log"%><%@ page language="java" contentType="text/html; charset=EUC-KR"
    pageEncoding="EUC-KR"%>
<%@page import="java.net.URLEncoder"%>
<%
	request.setCharacterEncoding("EUC-KR");
	Log log = LogFactory.getLog("org.apache.lucene.analysis.kr");
    String question = request.getParameter("input");
    if(question==null) question = "";    
%>
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">

<%@page import="org.apache.commons.logging.LogFactory"%>

<%@page import="org.apache.lucene.analysis.kr.morph.MorphAnalyzer"%>
<%@page import="org.apache.lucene.analysis.kr.KoreanTokenizer"%>
<%@page import="java.io.StringReader"%>
<%@page import="org.apache.lucene.analysis.Token"%>
<%@page import="org.apache.lucene.analysis.kr.morph.AnalysisOutput"%>
<%@page import="java.util.List"%>
<%@page import="java.util.ArrayList"%>

<HTML>
 <HEAD>
  <TITLE>자바 한글형태소분석기 데모</TITLE>
	<STYLE type="text/css">
	<!--
	td {  font-size: 10pt}
	select {  font-size: 10pt}
	textarea {  font-size: 10pt}
	.benhur1 {  font-size: 12pt}
	a:visited {  text-decoration: none; color: #000000}
	a:link {  text-decoration: none; color: #000000}
	a:hover {  color: #000000; text-decoration: underline}

.outer {
	color:#666666;
	background-color:#ffffff;
	font-family: 돋움, Arial, Tahoma;
	border-bottom: #4a93dd 1px solid;
}
.title {
	color:#666666;
	background-color:#ffffff;
	font-family: 돋움, Arial, Tahoma;
	FONT-SIZE: 12px;
	height: 18px; margin-bottom:0px;
	padding: 2px 0 2px 10px;
}
.inner {
	color:#666666;
	background-color:#ffffff;
	font-family: 돋움, Arial, Tahoma;
	FONT-SIZE: 12px;
	height: 18px; margin-bottom:0px;
	padding: 2px 0 2px 10px;
	margin: 0 0 0 50px;
}
	-->
	</STYLE>
 </HEAD>

 <BODY>

<table width="800" align="center">
  <tr>
  <td>
  </td>
  </tr>
  <tr>
  <td>
	<a href="start.jsp" class="menu">형태소분석</a>  | <a href="cnouns.jsp" class="menu">복합명사 분해</a>  | <a href="space.jsp" class="menu">자동띄워쓰기</a> | <a href="keyword.jsp" class="menu">색인어추출</a>
	<hr/>
  </td>
  </tr>
  </table>
 <form method="post" name="morph">
  <table width="800" align="center">
  <tr>
  <td>
		<div style="font-size:18pt;text-align:center">한글 형태소분석 데모</div>
		<div style="font-size:10pt;text-align:center;color:blue">한글형태소분석기입니다.</div>

  </td>
  </tr>
  <tr>
  <td>
  <div style="text-align:center">
  <textarea name="input" rows="7" cols="100">
  	<%= (String) session.getAttribute("trans") %>
  </textarea>
  <div>
  <div style="text-align:right;margin-right:35px">
  	<input type="submit" name="action" value="실행하기">
  </div>
  </td>
  </tr>
  <tr>
  <td style="background-color:#BBBBEF">
  <div style="font-weight:bold;margin-top:20px;">입력 : </div>
  <div style="padding-left:40px;margin-top:5px"><%=question %></div>
  </td>
  </tr>
  <tr>
  <td>
  <div style="font-weight:bold;margin-top:20px">출력 : </div>
  <hr>
<%
ArrayList<String> morphs = new ArrayList<String>(); //morph 결과 저장 ArrayList 생성
ArrayList<String> types = new ArrayList<String>(); //type 결과 저장 Arraylist 생성
//Vector<String> morphs2 = new Vector<String>();
//question : textarea에서 입력받은 값
//위의 자바문에서 받는걸로 되있음
try
{
	if(!"".equals(question)) 
	{
		log.info(question); //전체 넘어온 음성인식 결과 출력
		long start = System.currentTimeMillis(); //시간 찍히도록
		MorphAnalyzer analyzer = new MorphAnalyzer();
		KoreanTokenizer tokenizer = new KoreanTokenizer(new StringReader(question));
		Token token = null;
		
		//한 토큰식 얻어옴
		while((token=tokenizer.next())!=null) 
		{
			if(!token.type().equals("<KOREAN>")) continue;
			
			out.println("<div class='outer'>");
			try 
			{
				String str;
				
				analyzer.setExactCompound(false);
				List<AnalysisOutput> results = analyzer.analyze(token.termText());
				out.println("<div class='title'>");		
				out.println(token.termText()); //음절로 자르기 ex)안녕하세요/저는/박유진/입니다.
				out.println("</div>");		
				
				for(AnalysisOutput o : results) 
				{
					str = o.toString(); //string 형식으로 바꿈
					
					//System.out.println(str + "타입1 : " + o.getPos());
					//System.out.println(str + "타입2 : " + o.getPos2());
					//log.info("type : " + o.getType());
					out.println("<div class='inner'>");	//음운			
					out.println(str+"->");
					log.info("1:"+str);
					log.info("->:"+str.replaceAll("\\([a-zA-Z]+\\)","")); //타입이 없어진 형태소 분석 결과 -> DB 저장
					
					Pattern p = Pattern.compile("\\((.*?)\\)"); //()안에 문자들을 찾음
					Matcher m = p.matcher(str); //찾은 문자들을 m에 저장
					while(m.find()) //m에 저장된 값들을 하나씩 가져옴
					{
						log.info("타입 : " + m.group(1));
						types.add(m.group(1)); //타입 저장
					}
					
					String[] st2 = new String(str.replaceAll("\\([a-zA-Z]+\\)","")).split(","); //ex)안녕,하세,요 -> 안녕/하세/요
					for(String s : st2)  
					{
						System.out.println("split : " + s);
						morphs.add(s); //음운 저장
					}
						
					
					//morphs.add((str.replaceAll("\\([a-zA-Z]+\\)","")).split(","));
					/* //다시 , 단위로 쪼개기
					StringTokenizer st = new StringTokenizer(str.replaceAll("\\([a-zA-Z]+\\)",""),",");
					
					//tokenizer arraylist에 저장하기
				 	while(st.hasMoreTokens())
					{
						log.info("-->:"+st.nextToken());
						
						//ArrayList로 저장
						//morphs.add(st.nextToken()); //음운 저장
						//morphs2.add(st.nextToken());
					} */
					 
					//음운에서 한글만 가져오기
					/* log.info("2:"+o.getStem()+" / "); //각 음절 분해된것들의 첫번째것만!!!
					//log.info("3:"+o.getPos()+" / "); //위에꺼의 타입
					//log.info("3:"+o.getPatn()+" / "); //나눠진 음운들?의 개수
					log.info("3:"+o.getEomi()+" / "); //동사에서 색인어 다음 것들!!!
					log.info("4:"+o.getVsfx()); */	
					
					
					for(int i=0;i<o.getCNounList().size();i++) //한번 더 쪼개질 경우
					{
						out.println(o.getCNounList().get(i).getWord()+"/");
						log.info("for문:"+o.getCNounList().get(i).getWord()); //쪼개진 음운에서 또 다른 의미가 있는 음운일 경우에만 나옴!
						
						Pattern p1 = Pattern.compile("\\((.*?)\\)"); //()안에 문자들을 찾음
						Matcher m1 = p1.matcher(str); //찾은 문자들을 m에 저장
						while(m1.find()) //m에 저장된 값들을 하나씩 가져옴
						{
							log.info("타입 : " + m1.group(1));
							types.add(m1.group(1)); //타입 저장
						}
						
						//ArrayList로 저장
						morphs.add(o.getCNounList().get(i).getWord()); //음운 저장
					}
					out.println("<"+o.getScore()+">");					
					out.println("</div>");		
				}
			}
			catch (Exception e)
			{
				out.println("<div class='title'>");					
				out.println(e.getMessage());
				out.println("</div>");					
				e.printStackTrace();
			}
			out.println("</div>");	
		}
		out.println("<div>"+(System.currentTimeMillis()-start)+"ms</div>");
		session.setAttribute("morphs", morphs);
		session.setAttribute("types", types);
	}
} catch(Exception e)
{
	out.println(e.getMessage());
	e.printStackTrace();
}
%>	
  </td>
  </tr>
  </table>
</form>  
<form method="GET" action="morphdb">
	<input type="submit" value="DB저장하기">
</form>
 </BODY>
</HTML>
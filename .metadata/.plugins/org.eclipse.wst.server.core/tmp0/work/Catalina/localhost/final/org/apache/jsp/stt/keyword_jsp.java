/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.69
 * Generated at: 2016-06-28 02:26:02 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.stt;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import org.apache.lucene.analysis.kr.morph.WordSpaceAnalyzer;
import java.util.List;
import org.apache.lucene.analysis.kr.morph.AnalysisOutput;
import org.apache.lucene.analysis.kr.KoreanAnalyzer;
import org.apache.lucene.analysis.TokenStream;
import java.io.StringReader;
import org.apache.lucene.analysis.Token;

public final class keyword_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=EUC-KR");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("    \n");

	request.setCharacterEncoding("EUC-KR");
	Log log = LogFactory.getLog("org.apache.lucene.analysis.kr");
    String question = request.getParameter("input");
    if(question==null) question = "";    

      out.write("\n");
      out.write("<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\">\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<HTML>\n");
      out.write(" <HEAD>\n");
      out.write("  <TITLE>Morpheme analysis</TITLE>\n");
      out.write("\t<STYLE type=\"text/css\">\n");
      out.write("\n");
      out.write("\ttd {  font-size: 10pt}\n");
      out.write("\tselect {  font-size: 10pt}\n");
      out.write("\ttextarea {  font-size: 10pt}\n");
      out.write("\t.benhur1 {  font-size: 12pt}\n");
      out.write("\ta {color: #EDA900}\n");
      out.write("\ta:visited {  text-decoration: none; color: #EDA900}\n");
      out.write("\ta:link {  text-decoration: none; color: #EDA900}\n");
      out.write("\ta:hover {  color: #E95D3C; text-decoration: underline }\n");
      out.write("\n");
      out.write(".outer {\n");
      out.write("\tcolor:#666666;\n");
      out.write("\tbackground-color:#ffffff;\n");
      out.write("\tfont-family: 돋움, Arial, Tahoma;\n");
      out.write("\tborder-bottom: #4a93dd 1px solid;\n");
      out.write("}\n");
      out.write(".title {\n");
      out.write("\tcolor:#666666;\n");
      out.write("\tbackground-color:#ffffff;\n");
      out.write("\tfont-family: 돋움, Arial, Tahoma;\n");
      out.write("\tFONT-SIZE: 12px;\n");
      out.write("\theight: 18px; margin-bottom:0px;\n");
      out.write("\tpadding: 2px 0 2px 10px;\n");
      out.write("}\n");
      out.write(".inner {\n");
      out.write("\tcolor:#666666;\n");
      out.write("\tbackground-color:#ffffff;\n");
      out.write("\tfont-family: 돋움, Arial, Tahoma;\n");
      out.write("\tFONT-SIZE: 12px;\n");
      out.write("\theight: 18px; margin-bottom:0px;\n");
      out.write("\tpadding: 2px 0 2px 10px;\n");
      out.write("\tmargin: 0 0 0 50px;\n");
      out.write("}\n");
      out.write("\t\n");
      out.write("\t\t.h1 {\n");
      out.write("\t \tstext-align: center;\n");
      out.write("        font-family: 'Impact';\n");
      out.write("        color: #E95D3C;\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\t\t.button-demo {\n");
      out.write("\t\tbackground: #E95D3C;\n");
      out.write("    \tcolor: #fff;\n");
      out.write("    \tfont-family: Lucida Console;\n");
      out.write("    \tfont-size: 13px;\n");
      out.write("    \theight: 30px;\n");
      out.write("    \twidth: 80px;\n");
      out.write("    \tline-height: 20px;\n");
      out.write("    \tmargin: 10px 10px;\n");
      out.write("    \ttext-align: center;\n");
      out.write("    \tborder: 0;\n");
      out.write("    \ttransition: all 0.3s ease 0s;\n");
      out.write("\t}\n");
      out.write("\n");
      out.write("\n");
      out.write("\t.button-demo:hover {\n");
      out.write(" \t\t background: #EDA900\n");
      out.write("\t}\n");
      out.write("\t</STYLE>\n");
      out.write(" </HEAD>\n");
      out.write("\n");
      out.write(" <BODY>\n");
      out.write(" <table width=\"800\" align=\"center\">\n");
      out.write("  <tr>\n");
      out.write("  <td>\n");
      out.write("\t<a href=\"start.jsp\" class=\"menu\">형태소분석</a>  | <a href=\"cnouns.jsp\" class=\"menu\">복합명사 분해</a>  | <a href=\"space.jsp\" class=\"menu\">자동띄워쓰기</a> | <a href=\"keyword.jsp\" class=\"menu\">색인어추출</a>\n");
      out.write("\t<hr/>\n");
      out.write("  </td>\n");
      out.write("  </tr>\n");
      out.write("  </table>\n");
      out.write(" <form method=\"post\" name=\"morph\">\n");
      out.write("  <table width=\"800\" align=\"center\">\n");
      out.write("  <tr>\n");
      out.write("  <td>\n");
      out.write("\t\t<div style=\"font-size:18pt;text-align:center\" class=\"h1\">Extraction of entry</div>\n");
      out.write("  </td>\n");
      out.write("  </tr>\n");
      out.write("  <tr>\n");
      out.write("  <td>\n");
      out.write("  <div style=\"text-align:center\">\n");
      out.write("  <textarea name=\"input\" rows=\"7\" cols=\"100\"></textarea>\n");
      out.write("  <div>\n");
      out.write("  <div style=\"text-align:right;margin-right:35px\">\n");
      out.write("  \t<input type=\"submit\" name=\"action\" class=\"button-demo\" value=\"실행하기\">\n");
      out.write("  </div>\n");
      out.write("  </td>\n");
      out.write("  </tr>\n");
      out.write("  <tr>\n");
      out.write("  <td style=\"background-color:#FFCA6C\">\n");
      out.write("  <div style=\"font-weight:bold;margin-top:20px;\">입력 : </div>\n");
      out.write("  <div style=\"padding-left:40px;margin-top:5px\">");
      out.print(question );
      out.write("</div>\n");
      out.write("  </td>\n");
      out.write("  </tr>\n");
      out.write("  <tr>\n");
      out.write("  <td>\n");
      out.write("  <div style=\"font-weight:bold;margin-top:20px\">출력 : </div>\n");
      out.write("  <hr>\n");

try {
	if(!"".equals(question)) {
		log.info(question);
		long start = System.currentTimeMillis();
		
		KoreanAnalyzer analyzer = new KoreanAnalyzer();
		
		TokenStream stream = analyzer.tokenStream("k", new StringReader(question));
		Token t;
		out.println("<div class='outer'>");
		while((t = stream.next())!=null) {			
			out.println("<div>"+t.termText()+"</div>");		
		}
		out.println("</div>");
		
		out.println("<div>"+(System.currentTimeMillis()-start)+"ms</div>");
	}
} catch(Exception e) {
	out.println(e.getMessage());
	e.printStackTrace();
}

      out.write("\t\n");
      out.write("  </td>\n");
      out.write("  </tr>\n");
      out.write("  </table>\n");
      out.write("</form>  \n");
      out.write(" </BODY>\n");
      out.write("</HTML>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
